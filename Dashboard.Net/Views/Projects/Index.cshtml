@{
    ViewData["Title"] = "The Platform Thing: Projects";
    ViewData["Title"] = "Projects - The Platform Thing";
}
@model Dashboard.Net.Models.ProjectsViewModel
@using Extensions
@using Dashboard.Classes
@using VstsApi.Net.Classes;
<main id="content" role="main">
    <div class="grid-row">
        <div class="column-full">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { autocomplete = "off" }))
            {
                @Html.ValidationSummary()
                @Html.AntiForgeryToken()

                <h1 class="heading-large">
                    Projects
                </h1>
                if (Model.Count(project => project.Properties.ContainsKey(ProjectProperties.CreatedBy) && project.Properties[ProjectProperties.CreatedBy] == AppSettings.ProjectCreatedBy) == 0)
                {
                    <div>
                        No projects found
                    </div>
                }
                else
                {
                    <table>
                        <tbody>
                            @for (var i = 0; i < Model.Count; i++)
                            {
                            var project = Model[i];
                            if (project.Properties.ContainsKey(ProjectProperties.CreatedBy) && project.Properties[ProjectProperties.CreatedBy] != AppSettings.ProjectCreatedBy) { continue; }
                            <tr>
                                <td>
                                    <b><a href="@Url.Action("Edit", new { id = project.Id })" title="Make changes to this project">@project.Name</a></b>
                                    <br />
                                    @project.Description
                                </td>
                                <td class="numeric">
                                    <span style="font-size:small;color:gray" title="Created">@(project.Properties.ContainsKey(ProjectProperties.CreatedDate) ? project.Properties[ProjectProperties.CreatedDate].ToDateTime().ToString("d MMM yyyy") : null)</span>
                                    <br />
                                    <a href="@project.Url" target="_blank" title="Go to project on Visual Studio Online">Team Project</a> - 
                                    <a href="@project.AppUrl" target="_blank" title="Go to application web site">App Site</a>
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                }
                <fieldset>
                    <br />
                    <div class="form-group">
                        <a href="@Url.Action("Create")" title="Create a new project" class="button">Create Project</a>
                    </div>
                </fieldset>
                if (Model.Count(project => project.Properties.ContainsKey(ProjectProperties.CreatedBy) && project.Properties[ProjectProperties.CreatedBy] == AppSettings.ProjectCreatedBy) > 0)
                {
                    <h2 class="heading-medium">
                        Other Projects
                    </h2>
                    <p>These projects were not created by this application and cannot be modified.</p>
                    for (var i = 0; i < Model.Count; i++)
                    {
                        var project = Model[i];
                        if (project.Properties.ContainsKey(ProjectProperties.CreatedBy) && project.Properties[ProjectProperties.CreatedBy] == AppSettings.ProjectCreatedBy) { continue; }
                        <div>
                            <span title="project.i">@project.Name</span>
                        </div>
                    }
                }
            }
        </div>
    </div>
</main>

