@{
    ViewData["Title"] = (Model.Id == null ? "Create Project" : $"Edit Project: {Model.Name}") + " - The Platform Thing";
}
@model Dashboard.Net.Models.ProjectViewModel
<main id="content" role="main">
    <div class="grid-row">
        <div class="column-full">
            @using (Html.BeginForm((Model.Id == null ? "Create" : "Edit"), null, FormMethod.Post, new { autocomplete = "off" }))
            {
                @Html.ValidationSummary()
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m=>Model.Id)

                <h1 class="heading-large">
                    @(Model.Id == null ? "New Project" : $"Edit Project: {Model.Name}")
                    @if (Model.Id != null)
                    {
                        <button type="submit" class="link-button" name="command" value="Delete Project" title="Delete this project" style="float:right" onclick="if (!confirm('Are you sure you want to delete this project?')) return false;">
                            <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                        </button>
                    }
                </h1>
                <h2 class="heading-medium">Project Details</h2>
                <p>Enter the cost code and title of your project.</p>
                <fieldset>
                    <legend class="visuallyhidden">Project Details</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CostCode, "Enter the cost code for this project", htmlAttributes: new { @class = "form-label col-md-10" })
                        @Html.ValidationMessageFor(model => model.CostCode, null, new { @class = "error-danger" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.CostCode,new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, "Enter the title of your project name", htmlAttributes: new { @class = "form-label col-md-10" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "error-danger" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, "Enter a description for your project (optional)", htmlAttributes: new { @class = "form-label col-md-10" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "error-danger" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        </div>
                    </div>
                </fieldset>

                <h2 class="heading-medium">Team Details</h2>
                <fieldset>
                    <legend class="visuallyhidden">Members</legend>
                    <p>Add the name and email address of team members.</p>
                    
                    <table class="" style="w:100%">
                        <thead>
                            <tr>
                                <th scope="col"></th>
                                <th class="" scope="col">First name</th>
                                <th class="" scope="col">Last name</th>
                                <th class="" scope="col">Email address</th>
                                <th class="" scope="col">Type</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.TeamMembers.Count; i++)
                            {
                                <tr>
                                    <th scope="row">@(i+1)</th>
                                    <td class="">
                                        @Html.ValidationMessageFor(model => Model.TeamMembers[i].FirstName, null, new { @class = "error-danger" })
                                        @Html.TextBoxFor(model => Model.TeamMembers[i].FirstName, new { @class = "form-control", placeholder = "first name", style="width:100%" })
                                    </td>
                                    <td class="">
                                        @Html.ValidationMessageFor(model => Model.TeamMembers[i].FirstName, null, new { @class = "error-danger" })
                                        @Html.TextBoxFor(model => Model.TeamMembers[i].LastName, new { @class = "form-control", placeholder = "last name", style = "width:100%" })
                                    </td>
                                    <td class="">
                                        @Html.ValidationMessageFor(model => Model.TeamMembers[i].FirstName, null, new { @class = "error-danger" })
                                        @Html.TextBoxFor(model => Model.TeamMembers[i].Email, new { @class = "form-control", placeholder = "email address", style = "width:100%" })
                                    </td>
                                    <td>
                                        @Html.EnumDropDownListFor(model => Model.TeamMembers[i].Role, new { @class = "form-control", style = "width:100%" })
                                    </td>
                                    <td>
                                        @if (i<Model.TeamMembers.Count - 1)
                                        {
                                            <button type="submit" class="link-button" name="command" value="Remove:@i" title="Remove this team member" onclick="if (!confirm('Are you sure you want to remove this member from the team?')) return false;">
                                                <span class="glyphicon glyphicon-minus" aria-hidden="true"></span>
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="submit" class="link-button" name="command" value="Add" title="Add another team member">
                                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </fieldset>
                <fieldset>
                    <div class="form-group floatleft">
                        <br>
                        <a href="@Url.Action("Index")" class="link-button">Cancel</a>
                        <input type="submit" class="button" name="command" value="@(Model.Id==null ? "Create Project" : "Save Changes")" style="float:right" />
                    </div>
                </fieldset>
            }
        </div>
    </div>
</main>

